import React from 'react';
import { connect } from 'react-redux';
import { Modal, Spin, Table, Form, Button } from 'antd';
<%- include('include/comps', {list}) %>
import styles from './addPlus.css';
import { actions, asyncAdd } from './models';
const FormItem = Form.Item;
const { Column } = Table;

<%
    const initData = list => {
        let result = {};
        list.forEach(item => {
            if (item.$uiControl === 'DatePicker') {
                result[item.name] = new Date();
            } else {
                result[item.name] = '';
            }
        });
        return JSON.stringify(result);
    }
%>

const initData = <%- initData(list) %>;

class ADD extends React.Component {
    state = {
        list: [{...initData}],
    };
    add = news => {
        this.setState({ list: [...this.state.list, ...news] });
    };
    del = delIndex => {
        this.setState({ list: this.state.list.filter((item, index) => index !== delIndex) });
    };
    clear = () => {
        this.setState({ list: [] });
    };
    update = (value, name, updateIndex) => {
        this.setState({
            list: this.state.list.map((item, index) => (updateIndex === index ? { ...item, [name]: value } : item)),
        });
    };
    handleCancel = () => {
        // this.props.form.resetFields();
        this.props.modalHide();
    };
    handleOk = () => {
        this.props.form.validateFields(async (err) => {
            if (!err) {
                await this.props.asyncAdd(this.state.list);
                this.props.form.resetFields();
                this.clear();
                this.add([{...initData}]);
                this.props.modalHide();
            }
        });
    };
    open = () => {
        this.props.modalShow();
    };
    render() {
        console.log(JSON.stringify(this.state.list));
        const { isModalShow, isLoading } = this.props;
        const { getFieldDecorator } = this.props.form;
        const table = (
            <Form layout="inline">
                <Table dataSource={this.state.list} pagination={false} rowClassName={() => styles.add_table}>
                    <%
                        list.forEach(item => {
                    %>
                    <Column
                        title="<%= item.title%>"
                        key="<%= item.name%>"
                        render={(text, item, index) => {
                            const id = '<%= item.name %>_' + index;
                            return (
                            <FormItem>
                                {getFieldDecorator(id, {
                                    <%- include('include/values.ejs', {item}) %>
                                    rules: [
                                    <%- include('include/rules.ejs', {item}) %>
                                    ],
                                })(
                                    <%- include('include/input.ejs', {item, onchange: true}) %>
                                )}
                            </FormItem>
                            );
                        }}
                    />
                    <%
                        })
                    %>
                </Table>
            </Form>
        );
        return (
            <span>
                <Button
                    onClick={() => {
                        this.open();
                    }}>
                    添加多条
                </Button>
                <Modal
                    width={800}
                    title="添加多条数据"
                    visible={isModalShow}
                    onOk={this.handleOk}
                    onCancel={this.handleCancel}
                    confirmLoading={isLoading}
                    maskClosable={false}>
                    <Spin spinning={isLoading} tip="保存中...">
                        {table}
                    </Spin>
                    <div style={{ marginTop: 15 }}>
                        <Button
                            onClick={() => {
                                this.add([{...initData}]);
                            }}>
                            添加
                        </Button>
                    </div>
                </Modal>
            </span>
        );
    }
}

const mapStateToProps = state => ({
    isModalShow: state.<%= stateKey %>.uiStatus.isAddPlusShow,
    isLoading: state.<%= stateKey %>.uiStatus.isLoading,
});

const mapDispatchToProps = dispatch => ({
    modalHide: () => dispatch(actions.changeUiStatus({ isAddPlusShow: false })),
    modalShow: () => dispatch(actions.changeUiStatus({ isAddPlusShow: true })),
    asyncAdd: contents => dispatch(asyncAdd(contents)),
});

export default connect(mapStateToProps, mapDispatchToProps)(Form.create()(ADD));
